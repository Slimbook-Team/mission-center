/* ui/apps_page/page.blp
 *
 * Copyright 2023 Romeo Calota
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 */

using Gtk 4.0;
using Adw 1;

template $AppsPage : Box {
  orientation: vertical;

  ScrolledWindow {
    vexpand: true;
    hexpand: true;

    ColumnView column_view {
      styles [
        "rich-list"
      ]

      show-row-separators: true;
      show-column-separators: true;

      ColumnViewColumn name_column {
        resizable: true;
        expand: true;
        title: "Name";

        factory: BuilderListItemFactory {
          template ListItem {
            // focusable: false;
            child: TreeExpander expander {
              list-row: bind template.item as <ListItem>;
              child: $ListItem {
                name: bind (expander.item as <$ViewModel>).name;
                content: bind (expander.item as <$ViewModel>).content;
              };
            };
          }
        };
      }

      ColumnViewColumn cpu_column {
        resizable: true;
        fixed-width: 90;
        title: "CPU";

        factory: BuilderListItemFactory {
          template ListItem {
            // focusable: false;
            child: TreeExpander expander {
              list-row: bind template.item as <ListItem>;
              hide-expander: true;
              indent-for-depth: false;
              indent-for-icon: false;

              halign: end;

              child: $StatColumn {
                unit: "%";
                property-name: "cpu-usage";
                content: bind (expander.item as <$ViewModel>).content;
              };
            };
          }
        };
      }

      ColumnViewColumn memory_column {
        resizable: true;
        fixed-width: 90;
        title: "Memory";

        factory: BuilderListItemFactory {
          template ListItem {
            // focusable: false;
            child: TreeExpander expander {
              list-row: bind template.item as <ListItem>;
              hide-expander: true;
              indent-for-depth: false;
              indent-for-icon: false;

              halign: end;

              child: $StatColumn {
                unit: "B";
                property-name: "memory-usage";
                content: bind (expander.item as <$ViewModel>).content;
              };
            };
          }
        };
      }

      ColumnViewColumn disk_column {
        resizable: true;
        fixed-width: 90;
        title: "Disk";

        factory: BuilderListItemFactory {
          template ListItem {
            // focusable: false;
            child: TreeExpander expander {
              list-row: bind template.item as <ListItem>;
              hide-expander: true;
              indent-for-depth: false;
              indent-for-icon: false;

              halign: end;

              child: $StatColumn {
                unit: "B/s";
                property-name: "disk-usage";
                content: bind (expander.item as <$ViewModel>).content;
              };
            };
          }
        };
      }

      ColumnViewColumn gpu_column {
        resizable: true;
        fixed-width: 90;
        title: "GPU";

        factory: BuilderListItemFactory {
          template ListItem {
            // focusable: false;
            child: TreeExpander expander {
              list-row: bind template.item as <ListItem>;
              hide-expander: true;
              indent-for-depth: false;
              indent-for-icon: false;

              halign: end;

              child: $StatColumn {
                unit: "%";
                property-name: "gpu-usage";
                content: bind (expander.item as <$ViewModel>).content;
              };
            };
          }
        };
      }
    }
  }
}
